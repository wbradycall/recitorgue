public class CylindricalReeds extends Stop {
    private String reedType;
    private double scalingFactor;

    public CylindricalReeds(String name, int pitch, int numberOfPipes, String reedType, double scalingFactor) {
        super(name, new Rank[]{new Rank(pitch, numberOfPipes)});
        this.reedType = reedType;
        this.scalingFactor = scalingFactor;
    }

    public String getReedType() {
        return reedType;
    }

    public void setReedType(String reedType) {
        this.reedType = reedType;
    }

    public double getScalingFactor() {
        return scalingFactor;
    }

    public void setScalingFactor(double scalingFactor) {
        this.scalingFactor = scalingFactor;
    }

    // Method to calculate scaled diameter based on scaling factor
    public double calculateScaledDiameter(double originalDiameter) {
        return originalDiameter * scalingFactor;
    }

    // Method to generate sound for cylindrical reeds
    public void generateSound() {
        for (Rank rank : getRanks()) {
            int pitch = rank.getPitch();
            int numberOfPipes = rank.getNumberOfPipes();
            double originalDiameter = 15.0; // Assuming an original diameter of 15.0 for cylindrical reeds
            
            // Calculate scaled diameter based on scaling factor
            double scaledDiameter = calculateScaledDiameter(originalDiameter);
            
            // Implement sound generation logic for cylindrical reeds
            System.out.println("Sound for CylindricalReeds stop with pitch " + pitch + " and scaled diameter " + scaledDiameter + " generated by " + reedType + " reed.");
        }
    }
}